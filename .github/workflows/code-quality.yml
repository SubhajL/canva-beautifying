name: Code Quality

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint with annotations
        uses: eslint/github-action@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for console logs
        run: |
          if grep -r "console\.\(log\|error\|warn\|info\|debug\)" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" src/ | grep -v "eslint-disable"; then
            echo "::error::Found console statements in code. Please remove them before merging."
            exit 1
          fi

      - name: Check for TODO comments
        run: |
          TODO_COUNT=$(grep -r "TODO\|FIXME\|HACK" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" src/ || echo "0")
          if [ ! -z "$TODO_COUNT" ]; then
            echo "::warning::Found TODO/FIXME/HACK comments in code:"
            echo "$TODO_COUNT"
          fi

      - name: Check bundle size
        run: |
          npm run build
          npx next-bundle-analyzer

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run npm audit
        run: npm audit --production

      - name: Run Trivy security scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Check for outdated packages
        run: |
          npx npm-check-updates --errorLevel 2
          
      - name: Check for unused dependencies
        run: |
          npx depcheck --json > depcheck-results.json
          if [ $(jq '.dependencies | length' depcheck-results.json) -gt 0 ] || [ $(jq '.devDependencies | length' depcheck-results.json) -gt 0 ]; then
            echo "::warning::Found unused dependencies:"
            cat depcheck-results.json | jq
          fi